{"version":3,"sources":["components/Display.jsx","components/PetForm.jsx","components/PetInfo.jsx","components/EditPet.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","className","to","map","pet","i","key","_id","scope","name","type","PetForm","setName","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","onSubmit","e","preventDefault","petItem","post","navigate","onChange","target","value","properties","message","placeholder","PetInfo","onClick","delete","EditPet","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"6QA8CeA,EAzCC,SAAAC,GAAU,IAAD,EAEGC,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAarB,OATAC,qBAAW,WACPC,IAAMC,IAAI,kCACLC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZL,EAAQK,EAAIG,SAEfC,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAC/B,IAGC,6BACI,kBAAC,IAAD,CAAMC,UAAU,eAAeC,GAAG,QAAlC,4BACA,sEACCb,EAAKc,KAAK,SAACC,EAAKC,GAAN,OACP,2BAAOJ,UAAU,oBAAoBK,IAAKF,EAAIG,KAC1C,+BACI,4BACI,wBAAIC,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,aAGR,+BACI,4BACI,4BAAKJ,EAAIK,MACT,4BAAKL,EAAIM,MAET,4BAAK,kBAAC,IAAD,CAAMT,UAAU,8BAA8BC,GAAE,WAAME,EAAIG,MAA1D,WAAL,MAAyF,kBAAC,IAAD,CAAMN,UAAU,mCAAmCC,GAAE,gBAAWE,EAAIG,MAApE,iBCsCtGI,EAtEC,SAAAxB,GAAU,IAAD,EACGC,mBAAS,IADZ,mBACdqB,EADc,KACRG,EADQ,OAEGxB,mBAAS,IAFZ,mBAEdsB,EAFc,KAERG,EAFQ,OAGiBzB,mBAAS,IAH1B,mBAGd0B,EAHc,KAGDC,EAHC,OAIW3B,mBAAS,IAJpB,mBAId4B,EAJc,KAIJC,EAJI,OAKW7B,mBAAS,IALpB,mBAKd8B,EALc,KAKJC,EALI,OAMe/B,mBAAS,IANxB,mBAMdgC,EANc,KAMFC,EANE,OAOOjC,mBAAS,IAPhB,mBAOdkC,EAPc,KAONC,EAPM,KAwBrB,OACI,yBAAKtB,UAAU,OACX,0DACA,0BAAMA,UAAU,uBAAuBuB,SAlB7B,SAAAC,GACdA,EAAEC,iBACF,IAAMC,EAAU,CAAClB,OAAMC,OAAMI,cAAaE,WAAUE,WAAUE,cAC9D5B,IAAMoC,KAAK,iCAAkCD,GACxCjC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAKwB,OACRC,EAAU5B,EAAIG,KAAKwB,QAEnBO,YAAS,QAEd9B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAQ5B,6BAAK,kBAAC,IAAD,CAAMC,UAAU,2BAA2BC,GAAG,KAA9C,SACD,yBAAKD,UAAU,cACX,4CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAe6B,SAAU,SAAAL,GAAC,OAAIb,EAAQa,EAAEM,OAAOC,UAC1EV,EAAOb,KAAO,uBAAGR,UAAU,eAAeqB,EAAOb,KAAKwB,WAAWC,SAAa,IAGpF,yBAAKjC,UAAU,cACX,4CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAe6B,SAAU,SAAAL,GAAC,OAAIZ,EAAQY,EAAEM,OAAOC,UAC1EV,EAAOZ,KAAO,uBAAGT,UAAU,eAAeqB,EAAOZ,KAAKuB,WAAWC,SAAa,IAGpF,yBAAKjC,UAAU,cACX,mDACA,2BAAOS,KAAK,OAAOT,UAAU,eAAe6B,SAAU,SAAAL,GAAC,OAAIV,EAAeU,EAAEM,OAAOC,UACjFV,EAAOR,YAAc,uBAAGb,UAAU,eAAeqB,EAAOR,YAAYmB,WAAWC,SAAa,IAGlG,yBAAKjC,UAAU,cACX,2CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAekC,YAAY,aAAaL,SAAU,SAAAL,GAAC,OAAIR,EAAYQ,EAAEM,OAAOC,WAG7G,yBAAK/B,UAAU,cACX,2CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAekC,YAAY,aAAaL,SAAU,SAAAL,GAAC,OAAIN,EAAYM,EAAEM,OAAOC,WAG7G,yBAAK/B,UAAU,cACX,2CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAekC,YAAY,aAAaL,SAAU,SAAAL,GAAC,OAAIJ,EAAcI,EAAEM,OAAOC,WAG/G,2BAAOtB,KAAK,SAAST,UAAU,4BAA4B+B,MAAM,eCRlEI,EAtDC,SAAAjD,GAAU,IAAD,EACGC,mBAAS,IADZ,mBACdqB,EADc,KACRG,EADQ,OAEGxB,mBAAS,IAFZ,mBAEdsB,EAFc,KAERG,EAFQ,OAGiBzB,mBAAS,IAH1B,mBAGd0B,EAHc,KAGDC,EAHC,OAIW3B,mBAAS,IAJpB,mBAId4B,EAJc,KAIJC,EAJI,OAKW7B,mBAAS,IALpB,mBAKd8B,EALc,KAKJC,EALI,OAMe/B,mBAAS,IANxB,mBAMdgC,EANc,KAMFC,EANE,KAQrB9B,qBAAW,WACPC,IAAMC,IAAN,yCAA4CN,EAAMoB,MAC7Cb,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZiB,EAAQjB,EAAIG,KAAKW,MACjBI,EAAQlB,EAAIG,KAAKY,MACjBK,EAAepB,EAAIG,KAAKgB,aACxBG,EAAYtB,EAAIG,KAAKkB,UACrBG,EAAYxB,EAAIG,KAAKoB,UACrBG,EAAc1B,EAAIG,KAAKsB,eAExBrB,OAAM,SAAAuB,GAAM,OAAI1B,QAAQC,IAAIyB,QACpC,CAACnC,EAAMoB,MAaV,OACI,yBAAKN,UAAU,aACX,6BAAK,kBAAC,IAAD,CAAMA,UAAU,gCAAgCC,GAAG,KAAnD,SACD,yBAAKD,UAAU,qCAAf,iBAAkEQ,GAClE,yBAAKR,UAAU,aACX,wCAAcS,GACd,2CAAiBI,GAFrB,UAIQ,4BACI,4BAAKE,GACL,4BAAKE,GACL,4BAAKE,KAGjB,4BAAQnB,UAAU,oCAAoCoC,QAxBnD,WACX7C,IAAM8C,OAAN,yCAA+CnD,EAAMoB,MAChDb,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZkC,YAAS,QAEZ9B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAkBtB,SAA8ES,KCqC/E8B,EApFC,SAAApD,GAAU,IAAD,EACGC,mBAAS,IADZ,mBACdqB,EADc,KACRG,EADQ,OAEGxB,mBAAS,IAFZ,mBAEdsB,EAFc,KAERG,EAFQ,OAGiBzB,mBAAS,IAH1B,mBAGd0B,EAHc,KAGDC,EAHC,OAIW3B,mBAAS,IAJpB,mBAId4B,EAJc,KAIJC,EAJI,OAKW7B,mBAAS,IALpB,mBAKd8B,EALc,KAKJC,EALI,OAMe/B,mBAAS,IANxB,mBAMdgC,EANc,KAMFC,EANE,OAOOjC,mBAAS,IAPhB,mBAOdkC,EAPc,KAONC,EAPM,KASrBhC,qBAAW,WACPC,IAAMC,IAAN,yCAA4CN,EAAMoB,MAC7Cb,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZiB,EAAQjB,EAAIG,KAAKW,MACjBI,EAAQlB,EAAIG,KAAKY,MACjBK,EAAepB,EAAIG,KAAKgB,aACxBG,EAAYtB,EAAIG,KAAKkB,UACrBG,EAAYxB,EAAIG,KAAKoB,UACrBG,EAAc1B,EAAIG,KAAKsB,eAExBrB,OAAM,SAAAuB,GAAM,OAAI1B,QAAQC,IAAIyB,QACpC,CAACnC,EAAMoB,MAiBV,OACI,yBAAKN,UAAU,OACX,oCAAUQ,GACV,0BAAMR,UAAU,uBAAuBuB,SAlB7B,SAAAC,GACdA,EAAEC,iBACF,IAAMC,EAAU,CAAClB,OAAMC,OAAMI,cAAaE,WAAUE,WAAUE,cAC9D5B,IAAMgD,IAAN,yCAA4CrD,EAAMoB,KAAOoB,GACpDjC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAKwB,OACRC,EAAU5B,EAAIG,KAAKwB,QAEnBO,YAAS,QAEd9B,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,QAQ5B,6BAAK,kBAAC,IAAD,CAAMC,UAAU,2BAA2BC,GAAG,KAA9C,SACD,yBAAKD,UAAU,cACX,4CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAe6B,SAAU,SAAAL,GAAC,OAAIb,EAAQa,EAAEM,OAAOC,QAAQA,MAAOvB,IACzFa,EAAOb,KAAO,uBAAGR,UAAU,eAAeqB,EAAOb,KAAKwB,WAAWC,SAAa,IAGpF,yBAAKjC,UAAU,cACX,4CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAe6B,SAAU,SAAAL,GAAC,OAAIZ,EAAQY,EAAEM,OAAOC,QAAQA,MAAOtB,IACzFY,EAAOZ,KAAO,uBAAGT,UAAU,eAAeqB,EAAOZ,KAAKuB,WAAWC,SAAa,IAGpF,yBAAKjC,UAAU,cACX,mDACA,2BAAOS,KAAK,OAAOT,UAAU,eAAe6B,SAAU,SAAAL,GAAC,OAAIV,EAAeU,EAAEM,OAAOC,QAAQA,MAAOlB,IAChGQ,EAAOR,YAAc,uBAAGb,UAAU,eAAeqB,EAAOR,YAAYmB,WAAWC,SAAa,IAGlG,yBAAKjC,UAAU,cACX,2CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAekC,YAAY,aAAaL,SAAU,SAAAL,GAAC,OAAIR,EAAYQ,EAAEM,OAAOC,QAAQA,MAAOhB,KAG5H,yBAAKf,UAAU,cACX,2CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAekC,YAAY,aAAaL,SAAU,SAAAL,GAAC,OAAIN,EAAYM,EAAEM,OAAOC,QAAQA,MAAOd,KAG5H,yBAAKjB,UAAU,cACX,2CACA,2BAAOS,KAAK,OAAOT,UAAU,eAAekC,YAAY,aAAaL,SAAU,SAAAL,GAAC,OAAIJ,EAAcI,EAAEM,OAAOC,QAAQA,MAAOZ,KAG9H,2BAAOV,KAAK,SAAST,UAAU,4BAA4B+B,MAAM,kBCpDlES,MAlBf,WACE,OACE,yBAAKxC,UAAU,aACb,2CAKA,kBAAC,IAAD,CAAQA,UAAU,QAChB,kBAAC,EAAD,CAASyC,KAAK,MACd,kBAAC,EAAD,CAASA,KAAK,SACd,kBAAC,EAAD,CAASA,KAAK,UACd,kBAAC,EAAD,CAASA,KAAK,kBCVFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEd1D,OAAM,SAAA2D,GACL9D,QAAQ8D,MAAMA,EAAMxB,c","file":"static/js/main.fd14abaa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\n\nconst Display = props => {\n\n    const [pets, setPets] = useState([]);\n\n    useEffect( () => {\n        axios.get(\"http://localhost:8000/api/pets\")\n            .then(res => {\n                console.log(res);\n                setPets(res.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <div>\n            <Link className=\"btn btn-info\" to=\"/new\">add a pet to the shelter</Link>\n            <h4>These pets are looking for a good home</h4>\n            {pets.map( (pet, i) => \n                <table className=\"table table-hover\" key={pet._id}>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{pet.name}</td>\n                            <td>{pet.type}</td>\n                            {/* <td>{pet.description}</td> */}\n                            <td>{<Link className=\"btn btn-outline-info btn-sm\" to={`/${pet._id}`}>Details</Link>} | {<Link className=\"btn btn-outline-secondary btn-sm\" to={`/edit/${pet._id}`}>Edit</Link>}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            )}\n        </div>\n    )\n\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst PetForm = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const CreatePet = e => {\n        e.preventDefault();\n        const petItem = {name, type, description, skillOne, skillTwo, skillThree};\n        axios.post(\"http://localhost:8000/api/pets\", petItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className=\"row\">\n            <h4>Know a pet needing a home?</h4>\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreatePet}>\n            <div><Link className=\"btn btn-info float-right\" to=\"/\">Home</Link></div>\n                <div className=\"form-group\">\n                    <label>Pet Name:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} />\n                    { errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>:\"\" }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Pet Type:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)} />\n                    { errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>:\"\" }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Pet Description:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setDescription(e.target.value)} />\n                    { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>:\"\" }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Skill 1:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"(optional)\" onChange={e => setSkillOne(e.target.value)} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Skill 2:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"(optional)\" onChange={e => setSkillTwo(e.target.value)} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Skill 3:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"(optional)\" onChange={e => setSkillThree(e.target.value)} />\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Add Pet\" />\n            </form>\n\n        </div>\n    )\n\n}\n\nexport default PetForm;","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst PetInfo = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkillOne(res.data.skillOne);\n                setSkillTwo(res.data.skillTwo);\n                setSkillThree(res.data.skillThree);\n\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                console.log(res);\n                navigate(\"/\");\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className=\"card mb-3\">\n            <div><Link className=\"btn btn-info float-right mb-3\" to=\"/\">Home</Link></div>\n                <div className=\"card-header bg-primary text-light\">Details about {name}</div>\n                <div className=\"card-body\">\n                    <p>Pet type: {type}</p>\n                    <p>Description: {description}</p>\n                    Skills: \n                        <ul>\n                            <li>{skillOne}</li>\n                            <li>{skillTwo}</li>\n                            <li>{skillThree}</li>\n                        </ul>\n                </div>\n                <button className=\"btn btn-outline-danger float-left\" onClick={remove}>Adopt {name}</button>\n        </div>\n\n    )\n\n}\n\nexport default PetInfo;","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst EditPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkillOne(res.data.skillOne);\n                setSkillTwo(res.data.skillTwo);\n                setSkillThree(res.data.skillThree);\n\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const UpdatePet = e => {\n        e.preventDefault();\n        const petItem = {name, type, description, skillOne, skillTwo, skillThree};\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, petItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className=\"row\">\n            <h4>Edit {name}</h4>\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdatePet}>\n            <div><Link className=\"btn btn-info float-right\" to=\"/\">Home</Link></div>\n                <div className=\"form-group\">\n                    <label>Pet Name:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} value={name}/>\n                    { errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>:\"\" }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Pet Type:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)} value={type}/>\n                    { errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>:\"\" }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Pet Description:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description}/>\n                    { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>:\"\" }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Skill 1:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"(optional)\" onChange={e => setSkillOne(e.target.value)} value={skillOne}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Skill 2:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"(optional)\" onChange={e => setSkillTwo(e.target.value)} value={skillTwo}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Skill 3:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"(optional)\" onChange={e => setSkillThree(e.target.value)} value={skillThree}/>\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Update Pet\" />\n            </form>\n\n        </div>\n    )\n\n}\n\nexport default EditPet;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from \"./components/Display\";\nimport PetForm from \"./components/PetForm\";\nimport PetInfo from \"./components/PetInfo\";\nimport EditPet from \"./components/EditPet\";\nimport { Link, Router } from '@reach/router';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Pet Shelter</h1>\n      {/* <Link className=\"btn btn-info\" to=\"/\">Pets</Link> */}\n      {/* <Link className=\"btn btn-info float-right mb-3\" to=\"/\">Home</Link> */}\n      {/* <Link className=\"btn btn-info\" to=\"/new\">add a pet to the shelter</Link> */}\n      \n      <Router className=\"my-5\">\n        <Display path=\"/\" />\n        <PetForm path=\"/new\" />\n        <PetInfo path=\"/:_id\" />\n        <EditPet path=\"/edit/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}